# docker/webもしくはdocker/app以下の更新があったときに、
# それぞれのDockerfileを使ってビルドし直す
# 各イメージについては、以下のベース名を持つ
# docker/web -> ghcr.io/densuke/laravelapp-web
# docker/app -> ghcr.io/densuke/laravelapp-web
# それぞれタグとして、ビルド時のepoch秒を設定する、これは人によりイメージが異なることを防ぐためである

name: image CI
on:
    # ディレクトリdocker/webとdocker/appに変更があったときに実行
    push:
        paths:
            - 'docker/web/**'
            - 'docker/app/**'
    workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
    build-web:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
        - name: ソース取得
          uses: actions/checkout@v4
        - name: コンテナレジストリへのログイン
          uses: docker/login-action@v3
          with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
        - name: 現在時刻のEpoch秒を取得してタグに利用
          id: epoch
          run: echo "::set-output name=epoch::$(date +%s)"
        - name: メタデータの取得(Docker)
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            # latestタグも追加
            flavor: |
                latest=${{ github.ref == 'refs/heads/main' }}
                epoch=${{ steps.epoch.outputs.epoch }}
        - name: Dockerイメージのビルド
          uses: docker/build-push-action@v4
          with:
            context: docker/web
            file: ./Dockerfile
            push: false
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            platforms: linux/amd64,linux/arm64
            provenance: false
